<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Marcin Kolny on</title><link>https://bytecodealliance.github.io/wamr.dev/contributors/marcin-kolny/</link><description>Recent content in Marcin Kolny on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Mon, 03 Jul 2023 00:15:56 +0000</lastBuildDate><atom:link href="https://bytecodealliance.github.io/wamr.dev/contributors/marcin-kolny/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction to WAMR WASI threads</title><link>https://bytecodealliance.github.io/wamr.dev/blog/introduction-to-wamr-wasi-threads/</link><pubDate>Mon, 03 Jul 2023 00:15:56 +0000</pubDate><guid>https://bytecodealliance.github.io/wamr.dev/blog/introduction-to-wamr-wasi-threads/</guid><description>One of the functionalities missing in WebAssembly for a long time was the ability to spawn new threads within the process. Various runtimes made efforts to address this limitation by introducing non-standard APIs for thread creation. WAMR provides a WAMR pthread library that implements a wide range of pthread APIs, (including synchronization primitives, pthread_create() function and many more).
In 2022, the introduction of the WASI threads proposal aimed to establish a standardized API for thread creation in WebAssembly.</description></item></channel></rss>