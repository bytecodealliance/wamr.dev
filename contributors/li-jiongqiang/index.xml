<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Li Jiongqiang on</title><link>https://bytecodealliance.github.io/wamr.dev/contributors/li-jiongqiang/</link><description>Recent content in Li Jiongqiang on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Mon, 10 Apr 2023 18:24:33 +0800</lastBuildDate><atom:link href="https://bytecodealliance.github.io/wamr.dev/contributors/li-jiongqiang/index.xml" rel="self" type="application/rss+xml"/><item><title>Transferring data from wasm apps to host : Part 1</title><link>https://bytecodealliance.github.io/wamr.dev/blog/transferring-data-from-wasm-apps-to-host-part-1/</link><pubDate>Mon, 10 Apr 2023 18:24:33 +0800</pubDate><guid>https://bytecodealliance.github.io/wamr.dev/blog/transferring-data-from-wasm-apps-to-host-part-1/</guid><description>Overview: From Wasm to Native # This section will introduce how to transfer data from the wasm world to the native world.
This topic has a lot of content, so this article will be divided into 2 parts.
The part 1 mainly discusses the structure. The part 2 mainly discussed the function pointer. Unlike the case of &amp;ldquo;Transferring data from host to wasm apps&amp;rdquo;, the native context can access memory from both worlds, so in many cases we can avoid copying memory.</description></item></channel></rss>